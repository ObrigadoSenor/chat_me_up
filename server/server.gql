# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ConversationAdminType {
  _adminId: String!
  _id: String!
}

type ConversationBasicType {
  _conversationId: String!
  _id: String!
}

type ConversationReturnType {
  data: ConversationType!
  membersIds: [String!]!
}

type ConversationType {
  _adminsIds: [ConversationAdminType!]!
  _id: String!
  _membersId: String!
  _messagesId: String!
  name: String
}

type FriendType {
  _id: String!
  _userId: String!
}

type FriendsBasicType {
  _id: String!
  _userId: String!
}

type FriendsType {
  _id: String!
  _userId: String!
  accepted: [FriendType!]!
  pending: [FriendType!]!
  rejected: [FriendType!]!
  requests: [FriendType!]!
}

type MemberLeaveType {
  _conversationId: String!
  _userId: String!
}

type MemberType {
  _id: String!
  _userId: String!
}

type MessageType {
  _id: String!
  _userId: String!
  createdAt: Float!
  message: String!
  updatedAt: Float!
}

type MessagesType {
  _conversationId: String!
  _id: String!
  messages: [MessageType!]!
}

type Mutation {
  addConversation(_userId: String!, membersIds: [String!]!): ConversationType!
  addMember(_conversationId: String!, _userId: String!): MemberType!
  addUser(confirmPassword: String!, email: String!, name: String!, password: String!): UserType!
  deleteConversation(_conversationId: String!): ConversationType!
  deleteUser(_id: String!): UserType!
  loginUser(email: String!, password: String!): UserType!
  removeMember(_conversationId: String!, _userId: String!): MemberLeaveType!
  sendFriendRequest(_friendId: String!, _userId: String!, friendSubType: String, userSubType: String): FriendType!
  sendMessage(_conversationId: String!, _userId: String!, message: String!): MessageType!
  updateFriendRequest(_friendId: String!, _userId: String!, friendSubTypeFrom: String, friendSubTypeTo: String, userSubTypeFrom: String, userSubTypeTo: String): FriendType!
  updateNameOfConversation(_conversationId: String!, name: String!): ConversationType!
}

type Query {
  getConversations(_userId: String!): [ConversationType!]!
  getFriends(_userId: String!, type: String): [FriendType!]!
  getFriendsNode(_userId: String!): FriendsType!
  getMembers(_conversationId: String!): [MemberType!]!
  getMessage(_conversationId: String!): [MessageType!]!
  getMessages(_messagesId: String!): MessagesType!
  getUser(_id: String!): UserType!
  getUserByToken(token: String!): UserType!
  getUsers: [UserType!]!
  joinConversation(_conversationId: String!): ConversationType!
  validToken(token: String!): ValidTokenType!
}

type Subscription {
  conversationAdded: ConversationReturnType!
  conversationDeleted: ConversationReturnType!
  conversationNameChange: ConversationType!
  friendRequestSent: [FriendsType!]!
  memberAdded: MemberType!
  memberRemoved: MemberLeaveType!
  messageSent: MessagesType!
  userAdded: UserBasicType!
  userDeleted: UserType!
}

type UserBasicType {
  _id: String!
  conversations: [ConversationBasicType!]!
  email: String!
  friends: FriendsBasicType!
  name: String!
}

type UserType {
  _id: String!
  conversations: [ConversationBasicType!]!
  date: String!
  email: String!
  friends: FriendsBasicType!
  hash: String!
  name: String!
  salt: String!
  token: String!
}

type ValidTokenType {
  expired: Boolean!
}
